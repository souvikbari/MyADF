{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "skbdf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FamilyCode",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ChildCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChildrenStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					},
					{
						"name": "FieldNotifiedDate",
						"type": "date"
					},
					{
						"name": "DroppedDate",
						"type": "date"
					},
					{
						"name": "DroppedReasonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DroppedReasonSubTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChildrenID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Birthdate",
						"type": "date"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Child"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "OUTPUT",
						"container": "skbcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ChildData.xlsx",
						"folderPath": "INPUT",
						"container": "skbcontainer"
					},
					"firstRowAsHeader": true,
					"nullValue": "NULL"
				},
				"schema": [
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "FamilyCode",
						"type": "String"
					},
					{
						"name": "ChildCode",
						"type": "String"
					},
					{
						"name": "ChildrenStatusID",
						"type": "String"
					},
					{
						"name": "RegistrationDate",
						"type": "String"
					},
					{
						"name": "FieldNotifiedDate",
						"type": "String"
					},
					{
						"name": "DroppedDate",
						"type": "String"
					},
					{
						"name": "DroppedReasonID",
						"type": "String"
					},
					{
						"name": "DroppedReasonSubTypeID",
						"type": "String"
					},
					{
						"name": "ChildrenID",
						"type": "String"
					},
					{
						"name": "Birthdate",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Registration",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "INPUT",
						"container": "skbcontainer"
					},
					"firstRowAsHeader": true,
					"nullValue": "NULL"
				},
				"schema": [
					{
						"name": "RegistrationDate",
						"type": "String"
					},
					{
						"name": "FamilyCode",
						"type": "String"
					},
					{
						"name": "ChildCode",
						"type": "String"
					},
					{
						"name": "ChildrenStatusID",
						"type": "String"
					},
					{
						"name": "Birthdate",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "EventStatusID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FamilyCode",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ChildCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChildrenStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RegistrationDate",
						"type": "date"
					},
					{
						"name": "FieldNotifiedDate",
						"type": "date"
					},
					{
						"name": "DroppedDate",
						"type": "date"
					},
					{
						"name": "DroppedReasonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DroppedReasonSubTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChildrenID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Birthdate",
						"type": "date"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "EventStatusID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Children"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineExcel2Database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ChildCode"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AgencyID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgencyID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FamilyCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FamilyCode",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ChildCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChildCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ChildrenStatusID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChildrenStatusID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RegistrationDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegistrationDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FieldNotifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FieldNotifiedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DroppedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DroppedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DroppedReasonID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DroppedReasonID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DroppedReasonSubTypeID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DroppedReasonSubTypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ChildrenID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ChildrenID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Birthdate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Birthdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false,
									"dateTimeFormat": "yyyy-M-dd"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTableOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelInput')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelInput",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableOutput",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          AgencyID as string,",
						"          FamilyCode as string,",
						"          ChildCode as string,",
						"          ChildrenStatusID as string,",
						"          RegistrationDate as string,",
						"          FieldNotifiedDate as string,",
						"          DroppedDate as string,",
						"          DroppedReasonID as string,",
						"          DroppedReasonSubTypeID as string,",
						"          ChildrenID as string,",
						"          Birthdate as string,",
						"          FirstName as string,",
						"          LastName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['/INPUT','OUTPUT']) ~> source1",
						"source1 split(year(toDate(RegistrationDate))==2012,",
						"     disjoint: true) ~> split1@(Year2012, YearOthers)",
						"split1@Year2012 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['File2012'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1",
						"split1@YearOthers sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as integer,",
						"          FamilyCode as long,",
						"          ChildCode as integer,",
						"          ChildrenStatusID as integer,",
						"          RegistrationDate as date,",
						"          FieldNotifiedDate as date,",
						"          DroppedDate as date,",
						"          DroppedReasonID as integer,",
						"          DroppedReasonSubTypeID as integer,",
						"          ChildrenID as integer,",
						"          Birthdate as date,",
						"          FirstName as string,",
						"          LastName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['TRUNCATE TABLE [dbo].[Child];'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelInput')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputFolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "AgencyID",
													"value": {
														"value": "6631",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "INPUT",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ChildCode"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "AgencyID",
														"type": "String"
													},
													"sink": {
														"name": "AgencyID",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "FamilyCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FamilyCode",
														"type": "Int64",
														"physicalType": "bigint"
													}
												},
												{
													"source": {
														"name": "ChildCode",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ChildCode",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "ChildrenStatusID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ChildrenStatusID",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "RegistrationDate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "Birthdate",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Birthdate",
														"type": "DateTime",
														"physicalType": "date"
													}
												},
												{
													"source": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "EventStatusID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EventStatusID",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "InputFolder",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"AgencyID": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputFolder')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineUsingDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}